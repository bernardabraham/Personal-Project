package Streams;

import java.util.Arrays;
import java.util.List;

public class Streamquestions {
	public static void main(String[] args) {
		List<Integer> nums = Arrays.asList(3, 4, 6, 5, 7);
		Streamquestions sq = new Streamquestions();
		// sq.evens(bums);
		// sq.stevens(nums);
		// sq.sum(nums);
		System.out.println(sq.max(nums));
		// for (int j : nums) {
		// if (j % 2 != 0) {
		// System.out.println(j);

		// List<Integer> evens = nums.stream().filter(x -> x % 2 ==
		// 0).collect(Collectors.toList());
		// // .map(i -> i * i)
		// // .reduce((a, b) -> Math.max(a, b))
		// // .get();
		// System.out.println(evens);
	}

	private int max(List<Integer> nums) {
		int max = Integer.MIN_VALUE;
		for (int i : i + 1) {
			// return {
			max = Math.max(max, i);
		}
		return max;

	}

	private void evens(List<Integer> nums) {
		for (int i : nums) {
			if (i % 2 == 0) {
				System.out.println(i);
			}
		}
	}

	private void stevens(List<Integer> nums) {
		int max = nums.stream().filter(x -> x % 2 != 0).map(i -> i * i).reduce((a, b) -> Math.min(a, b)).get();
		System.out.println(max);
	}

	private void sum(List<Integer> nums) {
		int a = 0;
		for (int i : nums) {
			a = a + i;

			if (i == nums.size()) {
				System.out.println(a);
			}

		}
	}

}

// â€‹Find the max value.
// Find the min value.
// Remove the odd numbers.
// Remove the even numbers.
// Find the sum of the list.
// Square every number in the list then remove the even numbers and then find
// the min value.
